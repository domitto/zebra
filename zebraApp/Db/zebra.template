#! Generated by VisualDCT v2.6

################################################################################
#
# README: IMPORTANT
#
# Are you a DLS person modifying this?
# If so, please make sure you modify the .vdb version of this file, not the
# .template. Make will then use vdct to regenerate the .template
# The .template file is here so it can be shipped externally
################################################################################
# % macro, P, Device prefix
# % macro, Q, Device suffix
# % macro, PORT, Asyn port and object name
# % macro, NELM, Maximum number of elements in position compare array
# % macro, EMPTY, Empty macro to satisfy VDCT
# % macro, PREC, Precision to show position compare gate and pulse fields
# % macro, M1, Motor 1 PV
# % macro, M1DIR, Set to - if motor inverted in geobrick (decode control = 3 instead of 7)
# % macro, M2, Motor 2 PV
# % macro, M2DIR, Set to - if motor inverted in geobrick (decode control = 3 instead of 7)
# % macro, M3, Motor 3 PV
# % macro, M3DIR, Set to - if motor inverted in geobrick (decode control = 3 instead of 7)
# % macro, M4, Motor 4 PV
# % macro, M4DIR, Set to - if motor inverted in geobrick (decode control = 3 instead of 7)
# % gui, $(PORT), edm, zebra.edl, zebra=$(P)$(Q)
# % gui, $(PORT), sevr
# % archiver 10 Monitor
record(bi, "$(P)$(Q):CONNECTED") {
  field(DESC, "Is zebra connected")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) ISCONNECTED")
  field(ZNAM, "Not Connected")
  field(ONAM, "Connected")
  field(ZSV, "INVALID")
  field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(Q):STORE") {
  field(DESC, "Store register values to flash")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) STORE")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):RESTORE") {
  field(DESC, "Restore register values from flash")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) RESTORE")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):CONFIG_WRITE") {
  field(DESC, "Write reg values to file")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) CONFIG_WRITE")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):CONFIG_READ") {
  field(DESC, "Read reg values from file")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) CONFIG_READ")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):CONFIG_FILE") {
  field(DESC, "Filename of config write/read")
  field(PINI, "YES")
  field(DTYP, "asynOctetWrite")
  field(INP, "@asyn($(PORT),0)CONFIG_FILE")
  field(FTVL, "CHAR")
  field(NELM, "256")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):CONFIG_STATUS") {
  field(DESC, "Status of config write/read")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0)CONFIG_STATUS")
  field(FTVL, "CHAR")
  field(NELM, "256")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):SYS_RESET") {
  field(DESC, "Reset Zebra")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) SYS_RESET")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ai, "$(P)$(Q):SYS_VER") {
  field(DESC, "Zebra firmware version")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) SYS_VER")
  field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(Q):PC_NUM_CAPLO") {
  field(DESC, "Points captured")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_NUM_CAPLO")
  field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(Q):PC_NUM_CAPHI") {
  field(DESC, "Points captured")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_NUM_CAPHI")
  field(SCAN, "I/O Intr")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PC_NUM_CAP") {
  field(INPA, "$(P)$(Q):PC_NUM_CAPLO CP")
  field(INPB, "$(P)$(Q):PC_NUM_CAPHI CP")
  field(CALC, "(A+(B<<16))")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):SYS_BUS1") {
  field(DESC, "Zebra system bus key")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) SYS_BUS1")
  field(FTVL, "CHAR")
  field(NELM, "1024")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):SYS_BUS2") {
  field(DESC, "Zebra system bus key")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) SYS_BUS2")
  field(FTVL, "CHAR")
  field(NELM, "1024")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 1 Monitor
record(ai, "$(P)$(Q):SYS_STAT1LO") {
  field(DESC, "Zebra system bus status 1 Lo")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) SYS_STAT1LO")
  field(SCAN, "I/O Intr")
}

# % archiver 1 Monitor
record(ai, "$(P)$(Q):SYS_STAT1HI") {
  field(DESC, "Zebra system bus status 1 Hi")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) SYS_STAT1HI")
  field(SCAN, "I/O Intr")
}

record(calc, "$(P)$(Q):SYS_STAT1") {
  field(DESC, "Zebra system bus status 1")
  field(INPA, "$(P)$(Q):SYS_STAT1LO CP")
  field(INPB, "$(P)$(Q):SYS_STAT1HI CP")
  field(CALC, "A+(B<<16)")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 1 Monitor
record(ai, "$(P)$(Q):SYS_STAT2LO") {
  field(DESC, "Zebra system bus status 2 Lo")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) SYS_STAT2LO")
  field(SCAN, "I/O Intr")
}

# % archiver 1 Monitor
record(ai, "$(P)$(Q):SYS_STAT2HI") {
  field(DESC, "Zebra system bus status 2 Hi")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) SYS_STAT2HI")
  field(SCAN, "I/O Intr")
}

record(calc, "$(P)$(Q):SYS_STAT2") {
  field(DESC, "Zebra system bus status 2")
  field(INPA, "$(P)$(Q):SYS_STAT2LO CP")
  field(INPB, "$(P)$(Q):SYS_STAT2HI CP")
  field(CALC, "A+(B<<16)")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND1_ENA)

record(ai, "$(P)$(Q):AND1_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND1_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B0 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B1 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B2 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B3 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B4 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B5 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B6 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B7 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B8 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:B9 PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BA PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BB PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BC PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BD PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BE PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND1_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND1_ENA:BF PP")
  field(INPA, "$(P)$(Q):AND1_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND1_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND1_INV)

record(ai, "$(P)$(Q):AND1_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND1_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B0 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B1 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B2 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B3 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B4 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B5 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B6 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B7 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B8 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND1_INV:B9 PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BA PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BB PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BC PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BD PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BE PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  field(FLNK, "$(P)$(Q):AND1_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND1_INV:BF PP")
  field(INPA, "$(P)$(Q):AND1_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND1_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND1_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND1_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND1_INP1)

record(ai, "$(P)$(Q):AND1_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) AND1_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND1_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND1_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND1_INP1 PP")
  field(INPA, "$(P)$(Q):AND1_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND1_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND1_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND1_INP2)

record(ai, "$(P)$(Q):AND1_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) AND1_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND1_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND1_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND1_INP2 PP")
  field(INPA, "$(P)$(Q):AND1_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND1_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND1_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND1_INP3)

record(ai, "$(P)$(Q):AND1_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) AND1_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND1_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND1_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND1_INP3 PP")
  field(INPA, "$(P)$(Q):AND1_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND1_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND1_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND1_INP4)

record(ai, "$(P)$(Q):AND1_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND1_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) AND1_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND1_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND1_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND1_INP4 PP")
  field(INPA, "$(P)$(Q):AND1_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND1_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND1_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND1_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND1_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND1_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND1_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND1_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND1_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):AND1_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>0&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND2_ENA)

record(ai, "$(P)$(Q):AND2_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND2_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B0 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B1 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B2 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B3 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B4 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B5 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B6 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B7 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B8 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:B9 PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BA PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BB PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BC PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BD PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BE PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND2_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND2_ENA:BF PP")
  field(INPA, "$(P)$(Q):AND2_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND2_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND2_INV)

record(ai, "$(P)$(Q):AND2_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND2_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B0 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B1 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B2 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B3 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B4 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B5 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B6 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B7 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B8 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND2_INV:B9 PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BA PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BB PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BC PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BD PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BE PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  field(FLNK, "$(P)$(Q):AND2_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND2_INV:BF PP")
  field(INPA, "$(P)$(Q):AND2_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND2_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND2_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND2_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND2_INP1)

record(ai, "$(P)$(Q):AND2_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) AND2_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND2_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND2_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND2_INP1 PP")
  field(INPA, "$(P)$(Q):AND2_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND2_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND2_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND2_INP2)

record(ai, "$(P)$(Q):AND2_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) AND2_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND2_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND2_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND2_INP2 PP")
  field(INPA, "$(P)$(Q):AND2_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND2_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND2_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND2_INP3)

record(ai, "$(P)$(Q):AND2_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) AND2_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND2_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND2_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND2_INP3 PP")
  field(INPA, "$(P)$(Q):AND2_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND2_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND2_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND2_INP4)

record(ai, "$(P)$(Q):AND2_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND2_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) AND2_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND2_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND2_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND2_INP4 PP")
  field(INPA, "$(P)$(Q):AND2_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND2_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND2_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND2_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND2_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND2_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND2_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND2_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND2_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):AND2_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>1&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND3_ENA)

record(ai, "$(P)$(Q):AND3_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND3_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B0 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B1 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B2 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B3 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B4 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B5 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B6 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B7 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B8 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:B9 PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BA PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BB PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BC PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BD PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BE PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND3_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND3_ENA:BF PP")
  field(INPA, "$(P)$(Q):AND3_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND3_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND3_INV)

record(ai, "$(P)$(Q):AND3_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND3_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B0 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B1 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B2 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B3 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B4 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B5 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B6 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B7 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B8 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND3_INV:B9 PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BA PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BB PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BC PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BD PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BE PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  field(FLNK, "$(P)$(Q):AND3_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND3_INV:BF PP")
  field(INPA, "$(P)$(Q):AND3_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND3_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND3_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND3_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND3_INP1)

record(ai, "$(P)$(Q):AND3_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) AND3_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND3_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND3_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND3_INP1 PP")
  field(INPA, "$(P)$(Q):AND3_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND3_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND3_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND3_INP2)

record(ai, "$(P)$(Q):AND3_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) AND3_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND3_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND3_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND3_INP2 PP")
  field(INPA, "$(P)$(Q):AND3_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND3_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND3_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND3_INP3)

record(ai, "$(P)$(Q):AND3_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) AND3_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND3_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND3_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND3_INP3 PP")
  field(INPA, "$(P)$(Q):AND3_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND3_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND3_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND3_INP4)

record(ai, "$(P)$(Q):AND3_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND3_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) AND3_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND3_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND3_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND3_INP4 PP")
  field(INPA, "$(P)$(Q):AND3_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND3_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND3_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND3_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND3_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND3_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND3_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND3_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND3_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):AND3_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>2&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND4_ENA)

record(ai, "$(P)$(Q):AND4_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND4_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B0 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B1 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B2 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B3 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B4 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B5 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B6 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B7 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B8 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:B9 PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BA PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BB PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BC PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BD PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BE PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  field(FLNK, "$(P)$(Q):AND4_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND4_ENA:BF PP")
  field(INPA, "$(P)$(Q):AND4_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND4_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", AND4_INV)

record(ai, "$(P)$(Q):AND4_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) AND4_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B0 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B1 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B2 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B3 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B4 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B5 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B6 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B7 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B8 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):AND4_INV:B9 PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BA PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BB PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BC PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BD PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BE PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  field(FLNK, "$(P)$(Q):AND4_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):AND4_INV:BF PP")
  field(INPA, "$(P)$(Q):AND4_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):AND4_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):AND4_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):AND4_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND4_INP1)

record(ai, "$(P)$(Q):AND4_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) AND4_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND4_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND4_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND4_INP1 PP")
  field(INPA, "$(P)$(Q):AND4_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND4_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND4_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND4_INP2)

record(ai, "$(P)$(Q):AND4_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) AND4_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND4_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND4_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND4_INP2 PP")
  field(INPA, "$(P)$(Q):AND4_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND4_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND4_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND4_INP3)

record(ai, "$(P)$(Q):AND4_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) AND4_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND4_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND4_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND4_INP3 PP")
  field(INPA, "$(P)$(Q):AND4_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND4_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND4_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", AND4_INP4)

record(ai, "$(P)$(Q):AND4_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):AND4_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) AND4_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):AND4_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) AND4_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):AND4_INP4 PP")
  field(INPA, "$(P)$(Q):AND4_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):AND4_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):AND4_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):AND4_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):AND4_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) AND4_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):AND4_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):AND4_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(AND4_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):AND4_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>3&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR1_ENA)

record(ai, "$(P)$(Q):OR1_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR1_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B0 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B1 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B2 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B3 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B4 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B5 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B6 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B7 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B8 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:B9 PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BA PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BB PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BC PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BD PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BE PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR1_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR1_ENA:BF PP")
  field(INPA, "$(P)$(Q):OR1_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR1_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR1_INV)

record(ai, "$(P)$(Q):OR1_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR1_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B0 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B1 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B2 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B3 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B4 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B5 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B6 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B7 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B8 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR1_INV:B9 PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BA PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BB PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BC PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BD PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BE PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  field(FLNK, "$(P)$(Q):OR1_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR1_INV:BF PP")
  field(INPA, "$(P)$(Q):OR1_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR1_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR1_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR1_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR1_INP1)

record(ai, "$(P)$(Q):OR1_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) OR1_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR1_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR1_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR1_INP1 PP")
  field(INPA, "$(P)$(Q):OR1_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR1_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR1_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR1_INP2)

record(ai, "$(P)$(Q):OR1_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) OR1_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR1_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR1_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR1_INP2 PP")
  field(INPA, "$(P)$(Q):OR1_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR1_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR1_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR1_INP3)

record(ai, "$(P)$(Q):OR1_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) OR1_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR1_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR1_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR1_INP3 PP")
  field(INPA, "$(P)$(Q):OR1_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR1_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR1_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR1_INP4)

record(ai, "$(P)$(Q):OR1_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR1_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) OR1_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR1_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR1_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR1_INP4 PP")
  field(INPA, "$(P)$(Q):OR1_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR1_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR1_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR1_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR1_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR1_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR1_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR1_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR1_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):OR1_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>4&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR2_ENA)

record(ai, "$(P)$(Q):OR2_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR2_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B0 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B1 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B2 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B3 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B4 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B5 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B6 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B7 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B8 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:B9 PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BA PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BB PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BC PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BD PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BE PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR2_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR2_ENA:BF PP")
  field(INPA, "$(P)$(Q):OR2_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR2_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR2_INV)

record(ai, "$(P)$(Q):OR2_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR2_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B0 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B1 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B2 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B3 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B4 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B5 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B6 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B7 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B8 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR2_INV:B9 PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BA PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BB PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BC PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BD PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BE PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  field(FLNK, "$(P)$(Q):OR2_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR2_INV:BF PP")
  field(INPA, "$(P)$(Q):OR2_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR2_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR2_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR2_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR2_INP1)

record(ai, "$(P)$(Q):OR2_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) OR2_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR2_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR2_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR2_INP1 PP")
  field(INPA, "$(P)$(Q):OR2_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR2_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR2_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR2_INP2)

record(ai, "$(P)$(Q):OR2_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) OR2_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR2_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR2_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR2_INP2 PP")
  field(INPA, "$(P)$(Q):OR2_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR2_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR2_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR2_INP3)

record(ai, "$(P)$(Q):OR2_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) OR2_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR2_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR2_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR2_INP3 PP")
  field(INPA, "$(P)$(Q):OR2_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR2_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR2_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR2_INP4)

record(ai, "$(P)$(Q):OR2_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR2_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) OR2_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR2_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR2_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR2_INP4 PP")
  field(INPA, "$(P)$(Q):OR2_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR2_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR2_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR2_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR2_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR2_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR2_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR2_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR2_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):OR2_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>5&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR3_ENA)

record(ai, "$(P)$(Q):OR3_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR3_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B0 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B1 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B2 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B3 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B4 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B5 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B6 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B7 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B8 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:B9 PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BA PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BB PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BC PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BD PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BE PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR3_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR3_ENA:BF PP")
  field(INPA, "$(P)$(Q):OR3_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR3_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR3_INV)

record(ai, "$(P)$(Q):OR3_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR3_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B0 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B1 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B2 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B3 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B4 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B5 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B6 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B7 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B8 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR3_INV:B9 PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BA PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BB PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BC PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BD PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BE PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  field(FLNK, "$(P)$(Q):OR3_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR3_INV:BF PP")
  field(INPA, "$(P)$(Q):OR3_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR3_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR3_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR3_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR3_INP1)

record(ai, "$(P)$(Q):OR3_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) OR3_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR3_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR3_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR3_INP1 PP")
  field(INPA, "$(P)$(Q):OR3_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR3_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR3_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR3_INP2)

record(ai, "$(P)$(Q):OR3_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) OR3_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR3_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR3_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR3_INP2 PP")
  field(INPA, "$(P)$(Q):OR3_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR3_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR3_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR3_INP3)

record(ai, "$(P)$(Q):OR3_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) OR3_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR3_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR3_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR3_INP3 PP")
  field(INPA, "$(P)$(Q):OR3_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR3_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR3_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR3_INP4)

record(ai, "$(P)$(Q):OR3_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR3_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) OR3_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR3_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR3_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR3_INP4 PP")
  field(INPA, "$(P)$(Q):OR3_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR3_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR3_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR3_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR3_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR3_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR3_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR3_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR3_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):OR3_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>6&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR4_ENA)

record(ai, "$(P)$(Q):OR4_ENA:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR4_ENA")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B0 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B1 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B2 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B3 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B4 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B5 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B6 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B7 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B8 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:B9 PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BA PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BB PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BC PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BD PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BE PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  field(FLNK, "$(P)$(Q):OR4_ENA:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_ENA:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR4_ENA:BF PP")
  field(INPA, "$(P)$(Q):OR4_ENA:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_ENA:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_ENA.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR4_ENA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_ENA:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_ENA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_ENA:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_ENA")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_ENA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", OR4_INV)

record(ai, "$(P)$(Q):OR4_INV:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB0")
  field(INP, "@asyn($(PORT),0) OR4_INV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B0 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B1 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B2 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B3 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B4 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B5 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B6 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B7 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B8 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):OR4_INV:B9 PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BA PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BB PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BC PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BD PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BE PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  field(FLNK, "$(P)$(Q):OR4_INV:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INV:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):OR4_INV:BF PP")
  field(INPA, "$(P)$(Q):OR4_INV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):OR4_INV:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):OR4_INV.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):OR4_INV") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_INV:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_INV:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_INV:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_INV")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_INV)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR4_INP1)

record(ai, "$(P)$(Q):OR4_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) OR4_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR4_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR4_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR4_INP1 PP")
  field(INPA, "$(P)$(Q):OR4_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR4_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR4_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR4_INP2)

record(ai, "$(P)$(Q):OR4_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) OR4_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR4_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR4_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR4_INP2 PP")
  field(INPA, "$(P)$(Q):OR4_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR4_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR4_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_INP2)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR4_INP3)

record(ai, "$(P)$(Q):OR4_INP3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_INP3:SYNC")
  field(INP, "@asyn($(PORT),0) OR4_INP3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR4_INP3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR4_INP3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR4_INP3 PP")
  field(INPA, "$(P)$(Q):OR4_INP3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR4_INP3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_INP3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_INP3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_INP3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_INP3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR4_INP3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_INP3)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OR4_INP4)

record(ai, "$(P)$(Q):OR4_INP4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OR4_INP4:SYNC")
  field(INP, "@asyn($(PORT),0) OR4_INP4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OR4_INP4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OR4_INP4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OR4_INP4 PP")
  field(INPA, "$(P)$(Q):OR4_INP4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OR4_INP4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OR4_INP4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OR4_INP4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OR4_INP4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OR4_INP4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OR4_INP4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OR4_INP4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OR4_INP4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):OR4_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>7&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE1_INP1)

record(ai, "$(P)$(Q):GATE1_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE1_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) GATE1_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE1_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE1_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE1_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE1_INP1 PP")
  field(INPA, "$(P)$(Q):GATE1_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE1_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE1_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE1_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE1_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE1_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE1_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE1_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE1_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE1_INP2)

record(ai, "$(P)$(Q):GATE1_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE1_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) GATE1_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE1_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE1_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE1_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE1_INP2 PP")
  field(INPA, "$(P)$(Q):GATE1_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE1_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE1_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE1_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE1_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE1_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE1_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE1_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE1_INP2)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):GATE1_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>8&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE2_INP1)

record(ai, "$(P)$(Q):GATE2_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE2_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) GATE2_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE2_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE2_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE2_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE2_INP1 PP")
  field(INPA, "$(P)$(Q):GATE2_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE2_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE2_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE2_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE2_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE2_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE2_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE2_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE2_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE2_INP2)

record(ai, "$(P)$(Q):GATE2_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE2_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) GATE2_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE2_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE2_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE2_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE2_INP2 PP")
  field(INPA, "$(P)$(Q):GATE2_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE2_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE2_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE2_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE2_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE2_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE2_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE2_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE2_INP2)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):GATE2_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>9&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE3_INP1)

record(ai, "$(P)$(Q):GATE3_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE3_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) GATE3_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE3_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE3_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE3_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE3_INP1 PP")
  field(INPA, "$(P)$(Q):GATE3_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE3_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE3_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE3_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE3_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE3_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE3_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE3_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE3_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE3_INP2)

record(ai, "$(P)$(Q):GATE3_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE3_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) GATE3_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE3_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE3_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE3_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE3_INP2 PP")
  field(INPA, "$(P)$(Q):GATE3_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE3_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE3_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE3_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE3_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE3_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE3_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE3_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE3_INP2)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):GATE3_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>10&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE4_INP1)

record(ai, "$(P)$(Q):GATE4_INP1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE4_INP1:SYNC")
  field(INP, "@asyn($(PORT),0) GATE4_INP1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE4_INP1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE4_INP1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE4_INP1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE4_INP1 PP")
  field(INPA, "$(P)$(Q):GATE4_INP1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE4_INP1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE4_INP1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE4_INP1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE4_INP1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE4_INP1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE4_INP1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE4_INP1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE4_INP1)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", GATE4_INP2)

record(ai, "$(P)$(Q):GATE4_INP2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):GATE4_INP2:SYNC")
  field(INP, "@asyn($(PORT),0) GATE4_INP2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):GATE4_INP2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) GATE4_INP2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE4_INP2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):GATE4_INP2 PP")
  field(INPA, "$(P)$(Q):GATE4_INP2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):GATE4_INP2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):GATE4_INP2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):GATE4_INP2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):GATE4_INP2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) GATE4_INP2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):GATE4_INP2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):GATE4_INP2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(GATE4_INP2)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):GATE4_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>11&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", DIV_FIRST)

record(ai, "$(P)$(Q):DIV_FIRST:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB0")
  field(INP, "@asyn($(PORT),0) DIV_FIRST")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B0 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B1 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B2 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B3 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B4 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B5 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B6 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B7 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B8 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:B9 PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BA PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BB PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BC PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BD PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BE PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  field(FLNK, "$(P)$(Q):DIV_FIRST:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV_FIRST:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):DIV_FIRST:BF PP")
  field(INPA, "$(P)$(Q):DIV_FIRST:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):DIV_FIRST:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):DIV_FIRST.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):DIV_FIRST") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):DIV_FIRST:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV_FIRST:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV_FIRST:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) DIV_FIRST")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV_FIRST)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", DIV1_INP)

record(ai, "$(P)$(Q):DIV1_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):DIV1_INP:SYNC")
  field(INP, "@asyn($(PORT),0) DIV1_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):DIV1_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) DIV1_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV1_INP PP")
  field(INPA, "$(P)$(Q):DIV1_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV1_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):DIV1_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV1_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV1_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV1_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):DIV1_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV1_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", DIV1_DIV)

record(ai, "$(P)$(Q):DIV1_DIV:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV1_DIVLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):DIV1_DIV:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV1_DIVHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):DIV1_DIV:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):DIV1_DIV:RBVLO CP")
  field(INPB, "$(P)$(Q):DIV1_DIV:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):DIV1_DIV:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):DIV1_DIV:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):DIV1_DIV:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV1_DIV PP")
  field(INPA, "$(P)$(Q):DIV1_DIV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV1_DIV.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV1_DIV.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV1_DIV") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):DIV1_DIV:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):DIV1_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV1_DIV:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV1_DIV:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV1_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV1_DIVLO")
  field(FLNK, "$(P)$(Q):DIV1_DIV:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV1_DIV:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):DIV1_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV1_DIV:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV1_DIV:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV1_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV1_DIVHI")
  field(FLNK, "$(P)$(Q):DIV1_DIV:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV1_DIV)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV1_OUTD") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>12&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV1_OUTN") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>16&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", DIV2_INP)

record(ai, "$(P)$(Q):DIV2_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):DIV2_INP:SYNC")
  field(INP, "@asyn($(PORT),0) DIV2_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):DIV2_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) DIV2_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV2_INP PP")
  field(INPA, "$(P)$(Q):DIV2_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV2_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):DIV2_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV2_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV2_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV2_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):DIV2_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV2_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", DIV2_DIV)

record(ai, "$(P)$(Q):DIV2_DIV:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV2_DIVLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):DIV2_DIV:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV2_DIVHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):DIV2_DIV:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):DIV2_DIV:RBVLO CP")
  field(INPB, "$(P)$(Q):DIV2_DIV:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):DIV2_DIV:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):DIV2_DIV:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):DIV2_DIV:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV2_DIV PP")
  field(INPA, "$(P)$(Q):DIV2_DIV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV2_DIV.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV2_DIV.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV2_DIV") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):DIV2_DIV:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):DIV2_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV2_DIV:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV2_DIV:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV2_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV2_DIVLO")
  field(FLNK, "$(P)$(Q):DIV2_DIV:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV2_DIV:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):DIV2_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV2_DIV:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV2_DIV:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV2_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV2_DIVHI")
  field(FLNK, "$(P)$(Q):DIV2_DIV:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV2_DIV)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV2_OUTD") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>13&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV2_OUTN") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>17&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", DIV3_INP)

record(ai, "$(P)$(Q):DIV3_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):DIV3_INP:SYNC")
  field(INP, "@asyn($(PORT),0) DIV3_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):DIV3_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) DIV3_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV3_INP PP")
  field(INPA, "$(P)$(Q):DIV3_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV3_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):DIV3_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV3_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV3_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV3_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):DIV3_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV3_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", DIV3_DIV)

record(ai, "$(P)$(Q):DIV3_DIV:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV3_DIVLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):DIV3_DIV:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV3_DIVHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):DIV3_DIV:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):DIV3_DIV:RBVLO CP")
  field(INPB, "$(P)$(Q):DIV3_DIV:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):DIV3_DIV:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):DIV3_DIV:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):DIV3_DIV:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV3_DIV PP")
  field(INPA, "$(P)$(Q):DIV3_DIV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV3_DIV.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV3_DIV.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV3_DIV") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):DIV3_DIV:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):DIV3_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV3_DIV:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV3_DIV:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV3_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV3_DIVLO")
  field(FLNK, "$(P)$(Q):DIV3_DIV:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV3_DIV:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):DIV3_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV3_DIV:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV3_DIV:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV3_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV3_DIVHI")
  field(FLNK, "$(P)$(Q):DIV3_DIV:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV3_DIV)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV3_OUTD") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>14&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV3_OUTN") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>18&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", DIV4_INP)

record(ai, "$(P)$(Q):DIV4_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):DIV4_INP:SYNC")
  field(INP, "@asyn($(PORT),0) DIV4_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):DIV4_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) DIV4_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV4_INP PP")
  field(INPA, "$(P)$(Q):DIV4_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV4_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):DIV4_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV4_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV4_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV4_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):DIV4_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV4_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", DIV4_DIV)

record(ai, "$(P)$(Q):DIV4_DIV:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV4_DIVLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):DIV4_DIV:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) DIV4_DIVHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):DIV4_DIV:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):DIV4_DIV:RBVLO CP")
  field(INPB, "$(P)$(Q):DIV4_DIV:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):DIV4_DIV:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):DIV4_DIV:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):DIV4_DIV:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):DIV4_DIV PP")
  field(INPA, "$(P)$(Q):DIV4_DIV:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV4_DIV.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):DIV4_DIV.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):DIV4_DIV") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):DIV4_DIV:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):DIV4_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV4_DIV:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV4_DIV:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV4_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV4_DIVLO")
  field(FLNK, "$(P)$(Q):DIV4_DIV:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):DIV4_DIV:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):DIV4_DIV")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):DIV4_DIV:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):DIV4_DIV:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):DIV4_DIV:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) DIV4_DIVHI")
  field(FLNK, "$(P)$(Q):DIV4_DIV:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(DIV4_DIV)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV4_OUTD") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>15&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):DIV4_OUTN") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>19&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE1_DLY)

record(ai, "$(P)$(Q):PULSE1_DLY:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE1_DLY:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE1_DLY")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE1_DLY:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE1_DLY PP")
  field(INPA, "$(P)$(Q):PULSE1_DLY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE1_DLY:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE1_DLY.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE1_DLY") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE1_DLY:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE1_DLY:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE1_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE1_DLY")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE1_DLY)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE1_WID)

record(ai, "$(P)$(Q):PULSE1_WID:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE1_WID:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE1_WID")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE1_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE1_WID PP")
  field(INPA, "$(P)$(Q):PULSE1_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE1_WID:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE1_WID.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE1_WID") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE1_WID:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE1_WID:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE1_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE1_WID")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE1_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePrescaler.vdb", PULSE1_PRE)

record(mbbi, "$(P)$(Q):PULSE1_PRE:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE1_PRE:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE1_PRE")
  field(SCAN, "I/O Intr")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
}

record(calcout, "$(P)$(Q):PULSE1_PRE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE1_PRE PP")
  field(INPA, "$(P)$(Q):PULSE1_PRE:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PULSE1_PRE") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PULSE1_PRE:SET PP")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE1_PRE:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE1_PRE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE1_PRE")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE1_PRE)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PULSE1_INP)

record(ai, "$(P)$(Q):PULSE1_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE1_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE1_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PULSE1_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PULSE1_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE1_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE1_INP PP")
  field(INPA, "$(P)$(Q):PULSE1_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE1_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE1_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE1_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE1_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE1_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE1_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PULSE1_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE1_INP)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PULSE1_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>20&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE2_DLY)

record(ai, "$(P)$(Q):PULSE2_DLY:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE2_DLY:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE2_DLY")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE2_DLY:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE2_DLY PP")
  field(INPA, "$(P)$(Q):PULSE2_DLY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE2_DLY:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE2_DLY.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE2_DLY") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE2_DLY:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE2_DLY:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE2_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE2_DLY")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE2_DLY)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE2_WID)

record(ai, "$(P)$(Q):PULSE2_WID:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE2_WID:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE2_WID")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE2_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE2_WID PP")
  field(INPA, "$(P)$(Q):PULSE2_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE2_WID:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE2_WID.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE2_WID") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE2_WID:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE2_WID:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE2_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE2_WID")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE2_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePrescaler.vdb", PULSE2_PRE)

record(mbbi, "$(P)$(Q):PULSE2_PRE:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE2_PRE:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE2_PRE")
  field(SCAN, "I/O Intr")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
}

record(calcout, "$(P)$(Q):PULSE2_PRE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE2_PRE PP")
  field(INPA, "$(P)$(Q):PULSE2_PRE:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PULSE2_PRE") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PULSE2_PRE:SET PP")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE2_PRE:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE2_PRE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE2_PRE")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE2_PRE)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PULSE2_INP)

record(ai, "$(P)$(Q):PULSE2_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE2_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE2_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PULSE2_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PULSE2_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE2_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE2_INP PP")
  field(INPA, "$(P)$(Q):PULSE2_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE2_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE2_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE2_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE2_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE2_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE2_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PULSE2_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE2_INP)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PULSE2_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>21&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE3_DLY)

record(ai, "$(P)$(Q):PULSE3_DLY:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE3_DLY:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE3_DLY")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE3_DLY:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE3_DLY PP")
  field(INPA, "$(P)$(Q):PULSE3_DLY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE3_DLY:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE3_DLY.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE3_DLY") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE3_DLY:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE3_DLY:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE3_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE3_DLY")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE3_DLY)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE3_WID)

record(ai, "$(P)$(Q):PULSE3_WID:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE3_WID:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE3_WID")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE3_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE3_WID PP")
  field(INPA, "$(P)$(Q):PULSE3_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE3_WID:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE3_WID.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE3_WID") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE3_WID:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE3_WID:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE3_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE3_WID")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE3_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePrescaler.vdb", PULSE3_PRE)

record(mbbi, "$(P)$(Q):PULSE3_PRE:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE3_PRE:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE3_PRE")
  field(SCAN, "I/O Intr")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
}

record(calcout, "$(P)$(Q):PULSE3_PRE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE3_PRE PP")
  field(INPA, "$(P)$(Q):PULSE3_PRE:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PULSE3_PRE") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PULSE3_PRE:SET PP")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE3_PRE:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE3_PRE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE3_PRE")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE3_PRE)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PULSE3_INP)

record(ai, "$(P)$(Q):PULSE3_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE3_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE3_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PULSE3_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PULSE3_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE3_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE3_INP PP")
  field(INPA, "$(P)$(Q):PULSE3_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE3_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE3_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE3_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE3_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE3_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE3_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PULSE3_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE3_INP)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PULSE3_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>22&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE4_DLY)

record(ai, "$(P)$(Q):PULSE4_DLY:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE4_DLY:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE4_DLY")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE4_DLY:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE4_DLY PP")
  field(INPA, "$(P)$(Q):PULSE4_DLY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE4_DLY:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE4_DLY.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE4_DLY") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE4_DLY:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE4_DLY:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE4_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE4_DLY")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE4_DLY)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite.vdb", PULSE4_WID)

record(ai, "$(P)$(Q):PULSE4_WID:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE4_WID:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE4_WID")
  field(SCAN, "I/O Intr")
  field(ASLO, "0.0001")
  field(PREC, "4")
}

record(calcout, "$(P)$(Q):PULSE4_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE4_WID PP")
  field(INPA, "$(P)$(Q):PULSE4_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE4_WID:DRVH") {
  field(CALC, "A*65535")
  field(A, "0.0001")
  field(OUT, "$(P)$(Q):PULSE4_WID.DRVH")
  field(PINI, "YES")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE4_WID") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE4_WID:SET PP")
  field(PREC, "4")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE4_WID:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE4_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE4_WID")
  field(ASLO, "0.0001")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE4_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePrescaler.vdb", PULSE4_PRE)

record(mbbi, "$(P)$(Q):PULSE4_PRE:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE4_PRE:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE4_PRE")
  field(SCAN, "I/O Intr")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
}

record(calcout, "$(P)$(Q):PULSE4_PRE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE4_PRE PP")
  field(INPA, "$(P)$(Q):PULSE4_PRE:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PULSE4_PRE") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PULSE4_PRE:SET PP")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE4_PRE:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE4_PRE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE4_PRE")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE4_PRE)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PULSE4_INP)

record(ai, "$(P)$(Q):PULSE4_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PULSE4_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PULSE4_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PULSE4_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PULSE4_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE4_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PULSE4_INP PP")
  field(INPA, "$(P)$(Q):PULSE4_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PULSE4_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PULSE4_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PULSE4_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PULSE4_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PULSE4_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PULSE4_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PULSE4_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PULSE4_INP)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PULSE4_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>23&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT1_TTL)

record(ai, "$(P)$(Q):OUT1_TTL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT1_TTL:SYNC")
  field(INP, "@asyn($(PORT),0) OUT1_TTL")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT1_TTL:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT1_TTL_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_TTL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT1_TTL PP")
  field(INPA, "$(P)$(Q):OUT1_TTL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT1_TTL") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT1_TTL:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT1_TTL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT1_TTL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT1_TTL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_TTL:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT1_TTL:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT1_TTL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT1_NIM)

record(ai, "$(P)$(Q):OUT1_NIM:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT1_NIM:SYNC")
  field(INP, "@asyn($(PORT),0) OUT1_NIM")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT1_NIM:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT1_NIM_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_NIM:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT1_NIM PP")
  field(INPA, "$(P)$(Q):OUT1_NIM:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT1_NIM") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT1_NIM:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT1_NIM:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT1_NIM:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT1_NIM")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_NIM:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT1_NIM:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT1_NIM)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT1_LVDS)

record(ai, "$(P)$(Q):OUT1_LVDS:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT1_LVDS:SYNC")
  field(INP, "@asyn($(PORT),0) OUT1_LVDS")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT1_LVDS:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT1_LVDS_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_LVDS:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT1_LVDS PP")
  field(INPA, "$(P)$(Q):OUT1_LVDS:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT1_LVDS") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT1_LVDS:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT1_LVDS:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT1_LVDS:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT1_LVDS")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT1_LVDS:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT1_LVDS:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT1_LVDS)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT2_TTL)

record(ai, "$(P)$(Q):OUT2_TTL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT2_TTL:SYNC")
  field(INP, "@asyn($(PORT),0) OUT2_TTL")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT2_TTL:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT2_TTL_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_TTL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT2_TTL PP")
  field(INPA, "$(P)$(Q):OUT2_TTL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT2_TTL") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT2_TTL:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT2_TTL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT2_TTL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT2_TTL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_TTL:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT2_TTL:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT2_TTL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT2_NIM)

record(ai, "$(P)$(Q):OUT2_NIM:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT2_NIM:SYNC")
  field(INP, "@asyn($(PORT),0) OUT2_NIM")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT2_NIM:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT2_NIM_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_NIM:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT2_NIM PP")
  field(INPA, "$(P)$(Q):OUT2_NIM:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT2_NIM") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT2_NIM:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT2_NIM:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT2_NIM:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT2_NIM")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_NIM:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT2_NIM:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT2_NIM)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT2_LVDS)

record(ai, "$(P)$(Q):OUT2_LVDS:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT2_LVDS:SYNC")
  field(INP, "@asyn($(PORT),0) OUT2_LVDS")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT2_LVDS:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT2_LVDS_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_LVDS:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT2_LVDS PP")
  field(INPA, "$(P)$(Q):OUT2_LVDS:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT2_LVDS") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT2_LVDS:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT2_LVDS:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT2_LVDS:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT2_LVDS")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT2_LVDS:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT2_LVDS:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT2_LVDS)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT3_TTL)

record(ai, "$(P)$(Q):OUT3_TTL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT3_TTL:SYNC")
  field(INP, "@asyn($(PORT),0) OUT3_TTL")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT3_TTL:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT3_TTL_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_TTL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT3_TTL PP")
  field(INPA, "$(P)$(Q):OUT3_TTL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT3_TTL") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT3_TTL:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT3_TTL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT3_TTL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT3_TTL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_TTL:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT3_TTL:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT3_TTL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT3_OC)

record(ai, "$(P)$(Q):OUT3_OC:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT3_OC:SYNC")
  field(INP, "@asyn($(PORT),0) OUT3_OC")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT3_OC:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT3_OC_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_OC:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT3_OC PP")
  field(INPA, "$(P)$(Q):OUT3_OC:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT3_OC") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT3_OC:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT3_OC:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT3_OC:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT3_OC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_OC:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT3_OC:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT3_OC)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT3_LVDS)

record(ai, "$(P)$(Q):OUT3_LVDS:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT3_LVDS:SYNC")
  field(INP, "@asyn($(PORT),0) OUT3_LVDS")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT3_LVDS:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT3_LVDS_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_LVDS:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT3_LVDS PP")
  field(INPA, "$(P)$(Q):OUT3_LVDS:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT3_LVDS") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT3_LVDS:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT3_LVDS:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT3_LVDS:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT3_LVDS")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT3_LVDS:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT3_LVDS:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT3_LVDS)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT4_TTL)

record(ai, "$(P)$(Q):OUT4_TTL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT4_TTL:SYNC")
  field(INP, "@asyn($(PORT),0) OUT4_TTL")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT4_TTL:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT4_TTL_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_TTL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT4_TTL PP")
  field(INPA, "$(P)$(Q):OUT4_TTL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT4_TTL") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT4_TTL:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT4_TTL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT4_TTL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT4_TTL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_TTL:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT4_TTL:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT4_TTL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT4_NIM)

record(ai, "$(P)$(Q):OUT4_NIM:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT4_NIM:SYNC")
  field(INP, "@asyn($(PORT),0) OUT4_NIM")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT4_NIM:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT4_NIM_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_NIM:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT4_NIM PP")
  field(INPA, "$(P)$(Q):OUT4_NIM:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT4_NIM") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT4_NIM:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT4_NIM:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT4_NIM:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT4_NIM")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_NIM:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT4_NIM:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT4_NIM)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT4_PECL)

record(ai, "$(P)$(Q):OUT4_PECL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT4_PECL:SYNC")
  field(INP, "@asyn($(PORT),0) OUT4_PECL")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT4_PECL:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT4_PECL_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_PECL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT4_PECL PP")
  field(INPA, "$(P)$(Q):OUT4_PECL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT4_PECL") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT4_PECL:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT4_PECL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT4_PECL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT4_PECL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT4_PECL:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT4_PECL:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT4_PECL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT5_ENCA)

record(ai, "$(P)$(Q):OUT5_ENCA:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT5_ENCA:SYNC")
  field(INP, "@asyn($(PORT),0) OUT5_ENCA")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT5_ENCA:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT5_ENCA_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCA:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT5_ENCA PP")
  field(INPA, "$(P)$(Q):OUT5_ENCA:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT5_ENCA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT5_ENCA:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT5_ENCA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT5_ENCA:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT5_ENCA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCA:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT5_ENCA:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT5_ENCA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT5_ENCB)

record(ai, "$(P)$(Q):OUT5_ENCB:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT5_ENCB:SYNC")
  field(INP, "@asyn($(PORT),0) OUT5_ENCB")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT5_ENCB:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT5_ENCB_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCB:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT5_ENCB PP")
  field(INPA, "$(P)$(Q):OUT5_ENCB:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT5_ENCB") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT5_ENCB:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT5_ENCB:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT5_ENCB:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT5_ENCB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCB:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT5_ENCB:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT5_ENCB)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT5_ENCZ)

record(ai, "$(P)$(Q):OUT5_ENCZ:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT5_ENCZ:SYNC")
  field(INP, "@asyn($(PORT),0) OUT5_ENCZ")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT5_ENCZ:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT5_ENCZ_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCZ:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT5_ENCZ PP")
  field(INPA, "$(P)$(Q):OUT5_ENCZ:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT5_ENCZ") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT5_ENCZ:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT5_ENCZ:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT5_ENCZ:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT5_ENCZ")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_ENCZ:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT5_ENCZ:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT5_ENCZ)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT6_ENCA)

record(ai, "$(P)$(Q):OUT6_ENCA:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT6_ENCA:SYNC")
  field(INP, "@asyn($(PORT),0) OUT6_ENCA")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT6_ENCA:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT6_ENCA_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCA:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT6_ENCA PP")
  field(INPA, "$(P)$(Q):OUT6_ENCA:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT6_ENCA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT6_ENCA:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT6_ENCA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT6_ENCA:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT6_ENCA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCA:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT6_ENCA:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT6_ENCA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT6_ENCB)

record(ai, "$(P)$(Q):OUT6_ENCB:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT6_ENCB:SYNC")
  field(INP, "@asyn($(PORT),0) OUT6_ENCB")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT6_ENCB:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT6_ENCB_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCB:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT6_ENCB PP")
  field(INPA, "$(P)$(Q):OUT6_ENCB:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT6_ENCB") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT6_ENCB:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT6_ENCB:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT6_ENCB:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT6_ENCB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCB:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT6_ENCB:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT6_ENCB)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT6_ENCZ)

record(ai, "$(P)$(Q):OUT6_ENCZ:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT6_ENCZ:SYNC")
  field(INP, "@asyn($(PORT),0) OUT6_ENCZ")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT6_ENCZ:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT6_ENCZ_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCZ:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT6_ENCZ PP")
  field(INPA, "$(P)$(Q):OUT6_ENCZ:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT6_ENCZ") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT6_ENCZ:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT6_ENCZ:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT6_ENCZ:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT6_ENCZ")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_ENCZ:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT6_ENCZ:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT6_ENCZ)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT7_ENCA)

record(ai, "$(P)$(Q):OUT7_ENCA:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT7_ENCA:SYNC")
  field(INP, "@asyn($(PORT),0) OUT7_ENCA")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT7_ENCA:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT7_ENCA_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCA:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT7_ENCA PP")
  field(INPA, "$(P)$(Q):OUT7_ENCA:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT7_ENCA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT7_ENCA:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT7_ENCA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT7_ENCA:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT7_ENCA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCA:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT7_ENCA:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT7_ENCA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT7_ENCB)

record(ai, "$(P)$(Q):OUT7_ENCB:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT7_ENCB:SYNC")
  field(INP, "@asyn($(PORT),0) OUT7_ENCB")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT7_ENCB:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT7_ENCB_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCB:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT7_ENCB PP")
  field(INPA, "$(P)$(Q):OUT7_ENCB:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT7_ENCB") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT7_ENCB:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT7_ENCB:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT7_ENCB:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT7_ENCB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCB:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT7_ENCB:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT7_ENCB)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT7_ENCZ)

record(ai, "$(P)$(Q):OUT7_ENCZ:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT7_ENCZ:SYNC")
  field(INP, "@asyn($(PORT),0) OUT7_ENCZ")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT7_ENCZ:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT7_ENCZ_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCZ:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT7_ENCZ PP")
  field(INPA, "$(P)$(Q):OUT7_ENCZ:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT7_ENCZ") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT7_ENCZ:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT7_ENCZ:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT7_ENCZ:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT7_ENCZ")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_ENCZ:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT7_ENCZ:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT7_ENCZ)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT8_ENCA)

record(ai, "$(P)$(Q):OUT8_ENCA:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT8_ENCA:SYNC")
  field(INP, "@asyn($(PORT),0) OUT8_ENCA")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT8_ENCA:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT8_ENCA_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCA:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT8_ENCA PP")
  field(INPA, "$(P)$(Q):OUT8_ENCA:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT8_ENCA") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT8_ENCA:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT8_ENCA:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT8_ENCA:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT8_ENCA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCA:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT8_ENCA:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT8_ENCA)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT8_ENCB)

record(ai, "$(P)$(Q):OUT8_ENCB:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT8_ENCB:SYNC")
  field(INP, "@asyn($(PORT),0) OUT8_ENCB")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT8_ENCB:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT8_ENCB_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCB:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT8_ENCB PP")
  field(INPA, "$(P)$(Q):OUT8_ENCB:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT8_ENCB") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT8_ENCB:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT8_ENCB:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT8_ENCB:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT8_ENCB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCB:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT8_ENCB:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT8_ENCB)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT8_ENCZ)

record(ai, "$(P)$(Q):OUT8_ENCZ:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT8_ENCZ:SYNC")
  field(INP, "@asyn($(PORT),0) OUT8_ENCZ")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT8_ENCZ:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT8_ENCZ_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCZ:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT8_ENCZ PP")
  field(INPA, "$(P)$(Q):OUT8_ENCZ:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT8_ENCZ") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT8_ENCZ:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT8_ENCZ:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT8_ENCZ:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT8_ENCZ")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_ENCZ:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT8_ENCZ:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT8_ENCZ)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", SOFT_IN)

record(ai, "$(P)$(Q):SOFT_IN:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB0")
  field(INP, "@asyn($(PORT),0) SOFT_IN")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B0 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B1 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B2 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B3 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B4 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B5 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B6 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B7 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B8 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:B9 PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BA PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BB PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BC PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BD PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BE PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  field(FLNK, "$(P)$(Q):SOFT_IN:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):SOFT_IN:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):SOFT_IN:BF PP")
  field(INPA, "$(P)$(Q):SOFT_IN:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):SOFT_IN:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):SOFT_IN.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):SOFT_IN") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):SOFT_IN:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):SOFT_IN:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):SOFT_IN:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) SOFT_IN")
  info(autosaveFields_pass0, "VAL")
}

# end(SOFT_IN)

record(motor, "$(P)$(Q):NOMOTOR") {
  field(DTYP, "Soft Channel")
  field(MRES, "1")
  field(OFF, "0")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):NOMOTOR:MRES") {
  field(VAL, "1")
}

record(ai, "$(P)$(Q):NOMOTOR:SCALE") {
  field(VAL, "1")
}

record(calcout, "$(P)$(Q):M1:MRES") {
  field(CALC, "B?-A*(C>0?C:1)*(0$(M1DIR=+)1):A*(C>0?C:1)*(0$(M1DIR=+)1)")
  field(INPA, "$(M1=$(P)$(Q):NOMOTOR).MRES CP")
  field(INPB, "$(M1=$(P)$(Q):NOMOTOR).DIR CP")
  field(INPC, "$(M1=$(P)$(Q):NOMOTOR):SCALE CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M2:MRES") {
  field(CALC, "B?-A*(C>0?C:1)*(0$(M2DIR=+)1):A*(C>0?C:1)*(0$(M2DIR=+)1)")
  field(INPA, "$(M2=$(P)$(Q):NOMOTOR).MRES CP")
  field(INPB, "$(M2=$(P)$(Q):NOMOTOR).DIR CP")
  field(INPC, "$(M2=$(P)$(Q):NOMOTOR):SCALE CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M3:MRES") {
  field(CALC, "B?-A*(C>0?C:1)*(0$(M3DIR=+)1):A*(C>0?C:1)*(0$(M3DIR=+)1)")
  field(INPA, "$(M3=$(P)$(Q):NOMOTOR).MRES CP")
  field(INPB, "$(M3=$(P)$(Q):NOMOTOR).DIR CP")
  field(INPC, "$(M3=$(P)$(Q):NOMOTOR):SCALE CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M4:MRES") {
  field(CALC, "B?-A*(C>0?C:1)*(0$(M4DIR=+)1):A*(C>0?C:1)*(0$(M4DIR=+)1)")
  field(INPA, "$(M4=$(P)$(Q):NOMOTOR).MRES CP")
  field(INPB, "$(M4=$(P)$(Q):NOMOTOR).DIR CP")
  field(INPC, "$(M4=$(P)$(Q):NOMOTOR):SCALE CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M1:MRES:OUT") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M1_SCALE")
  field(DOL, "$(P)$(Q):M1:MRES CP")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M2:MRES:OUT") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M2_SCALE")
  field(DOL, "$(P)$(Q):M2:MRES CP")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M3:MRES:OUT") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M3_SCALE")
  field(DOL, "$(P)$(Q):M3:MRES CP")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M4:MRES:OUT") {
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M4_SCALE")
  field(DOL, "$(P)$(Q):M4:MRES CP")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):NOMOTOR:OFF") {
  field(VAL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M1:OFF") {
  field(CALC, "A")
  field(INPA, "$(M1=$(P)$(Q):NOMOTOR).OFF CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M2:OFF") {
  field(CALC, "A")
  field(INPA, "$(M2=$(P)$(Q):NOMOTOR).OFF CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M3:OFF") {
  field(CALC, "A")
  field(INPA, "$(M3=$(P)$(Q):NOMOTOR).OFF CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):M4:OFF") {
  field(CALC, "A")
  field(INPA, "$(M4=$(P)$(Q):NOMOTOR).OFF CP")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M1:OFF:OUT") {
  field(DOL, "$(P)$(Q):M1:OFF CP")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M1_OFF")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M2:OFF:OUT") {
  field(DOL, "$(P)$(Q):M2:OFF CP")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M2_OFF")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M3:OFF:OUT") {
  field(DOL, "$(P)$(Q):M3:OFF CP")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M3_OFF")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):M4:OFF:OUT") {
  field(DOL, "$(P)$(Q):M4:OFF CP")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0) M4_OFF")
  field(OMSL, "closed_loop")
  info(autosaveFields_pass0, "VAL")
}

record(sel, "$(P)$(Q):MOTOR:MRES") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):M1:MRES CP")
  field(INPB, "$(P)$(Q):M2:MRES CP")
  field(INPC, "$(P)$(Q):M3:MRES CP")
  field(INPD, "$(P)$(Q):M4:MRES CP")
  field(INPE, "$(P)$(Q):MAV:MRES.VAL CP")
  field(NVL, "$(P)$(Q):PC_ENC:RBV CP")
  info(autosaveFields_pass0, "VAL")
}

record(sel, "$(P)$(Q):MOTOR:OFF") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):M1:OFF CP")
  field(INPB, "$(P)$(Q):M2:OFF CP")
  field(INPC, "$(P)$(Q):M3:OFF CP")
  field(INPD, "$(P)$(Q):M4:OFF CP")
  field(INPE, "$(P)$(Q):MAV:OFF.VAL CP")
  field(NVL, "$(P)$(Q):PC_ENC:RBV CP")
  info(autosaveFields_pass0, "VAL")
}

record(sel, "$(P)$(Q):PULSE:MRES") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):MOTOR:ABSMRES CP")
  field(INPB, "$(P)$(Q):TIME:MRES CP")
  field(INPC, "1")
  field(NVL, "$(P)$(Q):PC_PULSE_SEL:RBV CP")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", POS1_SET)

record(ai, "$(P)$(Q):POS1_SET:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS1_SETLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):POS1_SET:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS1_SETHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):POS1_SET:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):POS1_SET:RBVLO CP")
  field(INPB, "$(P)$(Q):POS1_SET:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):POS1_SET:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):M1:MRES CP")
  field(INPB, "$(P)$(Q):M1:OFF CP")
  field(INPC, "$(P)$(Q):POS1_SET:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):POS1_SET:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):POS1_SET PP")
  field(INPA, "$(P)$(Q):POS1_SET:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):M1:MRES CP")
  field(INPB, "$(P)$(Q):M1:OFF CP")
  field(OUT, "$(P)$(Q):POS1_SET.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:DRVL") {
  field(CALC, "-A*2**31+B")
  field(INPA, "$(P)$(Q):M1:MRES CP")
  field(INPB, "$(P)$(Q):M1:OFF CP")
  field(OUT, "$(P)$(Q):POS1_SET.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):POS1_SET") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):POS1_SET:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):POS1_SET")
  field(INPC, "$(P)$(Q):M1:MRES")
  field(INPD, "$(P)$(Q):M1:OFF")
  field(OUT, "$(P)$(Q):POS1_SET:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS1_SET:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS1_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS1_SETLO")
  field(FLNK, "$(P)$(Q):POS1_SET:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS1_SET:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):POS1_SET")
  field(INPC, "$(P)$(Q):M1:MRES")
  field(INPD, "$(P)$(Q):M1:OFF")
  field(OUT, "$(P)$(Q):POS1_SET:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS1_SET:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS1_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS1_SETHI")
  field(FLNK, "$(P)$(Q):POS1_SET:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(POS1_SET)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", POS2_SET)

record(ai, "$(P)$(Q):POS2_SET:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS2_SETLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):POS2_SET:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS2_SETHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):POS2_SET:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):POS2_SET:RBVLO CP")
  field(INPB, "$(P)$(Q):POS2_SET:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):POS2_SET:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):M2:MRES CP")
  field(INPB, "$(P)$(Q):M2:OFF CP")
  field(INPC, "$(P)$(Q):POS2_SET:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):POS2_SET:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):POS2_SET PP")
  field(INPA, "$(P)$(Q):POS2_SET:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):M2:MRES CP")
  field(INPB, "$(P)$(Q):M2:OFF CP")
  field(OUT, "$(P)$(Q):POS2_SET.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:DRVL") {
  field(CALC, "-A*2**31+B")
  field(INPA, "$(P)$(Q):M2:MRES CP")
  field(INPB, "$(P)$(Q):M2:OFF CP")
  field(OUT, "$(P)$(Q):POS2_SET.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):POS2_SET") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):POS2_SET:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):POS2_SET")
  field(INPC, "$(P)$(Q):M2:MRES")
  field(INPD, "$(P)$(Q):M2:OFF")
  field(OUT, "$(P)$(Q):POS2_SET:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS2_SET:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS2_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS2_SETLO")
  field(FLNK, "$(P)$(Q):POS2_SET:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS2_SET:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):POS2_SET")
  field(INPC, "$(P)$(Q):M2:MRES")
  field(INPD, "$(P)$(Q):M2:OFF")
  field(OUT, "$(P)$(Q):POS2_SET:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS2_SET:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS2_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS2_SETHI")
  field(FLNK, "$(P)$(Q):POS2_SET:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(POS2_SET)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", POS3_SET)

record(ai, "$(P)$(Q):POS3_SET:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS3_SETLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):POS3_SET:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS3_SETHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):POS3_SET:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):POS3_SET:RBVLO CP")
  field(INPB, "$(P)$(Q):POS3_SET:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):POS3_SET:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):M3:MRES CP")
  field(INPB, "$(P)$(Q):M3:OFF CP")
  field(INPC, "$(P)$(Q):POS3_SET:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):POS3_SET:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):POS3_SET PP")
  field(INPA, "$(P)$(Q):POS3_SET:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):M3:MRES CP")
  field(INPB, "$(P)$(Q):M3:OFF CP")
  field(OUT, "$(P)$(Q):POS3_SET.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:DRVL") {
  field(CALC, "-A*2**31+B")
  field(INPA, "$(P)$(Q):M3:MRES CP")
  field(INPB, "$(P)$(Q):M3:OFF CP")
  field(OUT, "$(P)$(Q):POS3_SET.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):POS3_SET") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):POS3_SET:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):POS3_SET")
  field(INPC, "$(P)$(Q):M3:MRES")
  field(INPD, "$(P)$(Q):M3:OFF")
  field(OUT, "$(P)$(Q):POS3_SET:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS3_SET:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS3_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS3_SETLO")
  field(FLNK, "$(P)$(Q):POS3_SET:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS3_SET:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):POS3_SET")
  field(INPC, "$(P)$(Q):M3:MRES")
  field(INPD, "$(P)$(Q):M3:OFF")
  field(OUT, "$(P)$(Q):POS3_SET:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS3_SET:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS3_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS3_SETHI")
  field(FLNK, "$(P)$(Q):POS3_SET:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(POS3_SET)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", POS4_SET)

record(ai, "$(P)$(Q):POS4_SET:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS4_SETLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):POS4_SET:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) POS4_SETHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):POS4_SET:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):POS4_SET:RBVLO CP")
  field(INPB, "$(P)$(Q):POS4_SET:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):POS4_SET:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):M4:MRES CP")
  field(INPB, "$(P)$(Q):M4:OFF CP")
  field(INPC, "$(P)$(Q):POS4_SET:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):POS4_SET:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):POS4_SET PP")
  field(INPA, "$(P)$(Q):POS4_SET:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):M4:MRES CP")
  field(INPB, "$(P)$(Q):M4:OFF CP")
  field(OUT, "$(P)$(Q):POS4_SET.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:DRVL") {
  field(CALC, "-A*2**31+B")
  field(INPA, "$(P)$(Q):M4:MRES CP")
  field(INPB, "$(P)$(Q):M4:OFF CP")
  field(OUT, "$(P)$(Q):POS4_SET.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):POS4_SET") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):POS4_SET:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):POS4_SET")
  field(INPC, "$(P)$(Q):M4:MRES")
  field(INPD, "$(P)$(Q):M4:OFF")
  field(OUT, "$(P)$(Q):POS4_SET:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS4_SET:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS4_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS4_SETLO")
  field(FLNK, "$(P)$(Q):POS4_SET:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POS4_SET:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):POS4_SET")
  field(INPC, "$(P)$(Q):M4:MRES")
  field(INPD, "$(P)$(Q):M4:OFF")
  field(OUT, "$(P)$(Q):POS4_SET:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POS4_SET:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POS4_SET:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) POS4_SETHI")
  field(FLNK, "$(P)$(Q):POS4_SET:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(POS4_SET)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePrescaler.vdb", PC_TSPRE)

record(mbbi, "$(P)$(Q):PC_TSPRE:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_TSPRE:SYNC")
  field(INP, "@asyn($(PORT),0) PC_TSPRE")
  field(SCAN, "I/O Intr")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
}

record(calcout, "$(P)$(Q):PC_TSPRE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_TSPRE PP")
  field(INPA, "$(P)$(Q):PC_TSPRE:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_TSPRE") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_TSPRE:SET PP")
  field(ZRST, "ms")
  field(ZRVL, "5")
  field(ONST, "s")
  field(ONVL, "5000")
  field(TWST, "10s")
  field(TWVL, "50000")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_TSPRE:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_TSPRE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_TSPRE")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_TSPRE)

record(ao, "$(P)$(Q):PC_ARM") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) PC_ARM")
  field(FLNK, "$(P)$(Q):ARM_SET_BUSY")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):ARM_SET_BUSY") {
  field(OUT, "$(P)$(Q):ARM_BUSY PP")
  field(VAL, "1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(busy, "$(P)$(Q):ARM_BUSY") {
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_DISARM") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) PC_DISARM")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_GATE_INP)

record(ai, "$(P)$(Q):PC_GATE_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_GATE_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PC_GATE_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_GATE_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_GATE_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_INP PP")
  field(INPA, "$(P)$(Q):PC_GATE_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_GATE_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_GATE_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_GATE_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePosCompInp.vdb", PC_GATE_SEL)

record(ai, "$(P)$(Q):PC_GATE_SEL:RRBV") {
  field(DESC, "Raw Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_GATE_SEL:RBV")
  field(INP, "@asyn($(PORT),0) PC_GATE_SEL")
  field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(Q):PC_GATE_SEL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "Raw Soft Channel")
  field(INP, "$(P)$(Q):PC_GATE_SEL:RRBV")
  field(FLNK, "$(P)$(Q):PC_GATE_SEL:SYNC")
  field(ZRST, "Position")
  field(ZRVL, "0")
  field(ONST, "Time")
  field(ONVL, "1")
  field(TWST, "External")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
}

record(calcout, "$(P)$(Q):PC_GATE_SEL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_SEL PP")
  field(INPA, "$(P)$(Q):PC_GATE_SEL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_GATE_SEL") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_GATE_SEL:SET PP")
  field(ZRST, "Position")
  field(ZRVL, "0")
  field(ONST, "Time")
  field(ONVL, "1")
  field(TWST, "External")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_SEL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_SEL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_SEL")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_SEL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_GATE_START)

record(ai, "$(P)$(Q):PC_GATE_START:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_STARTLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_GATE_START:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_STARTHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_GATE_START:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_GATE_START:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_GATE_START:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_GATE_START:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):STARTGATE:MRES CP")
  field(INPB, "$(P)$(Q):STARTGATE:OFF CP")
  field(INPC, "$(P)$(Q):PC_GATE_START:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_GATE_START:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_START PP")
  field(INPA, "$(P)$(Q):PC_GATE_START:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):STARTGATE:MRES CP")
  field(INPB, "$(P)$(Q):STARTGATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_START.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:DRVL") {
  field(CALC, "-A*2**31+B")
  field(INPA, "$(P)$(Q):STARTGATE:MRES CP")
  field(INPB, "$(P)$(Q):STARTGATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_START.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_GATE_START") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_GATE_START:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_GATE_START")
  field(INPC, "$(P)$(Q):STARTGATE:MRES")
  field(INPD, "$(P)$(Q):STARTGATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_START:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_START:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_START:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_STARTLO")
  field(FLNK, "$(P)$(Q):PC_GATE_START:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_START:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_GATE_START")
  field(INPC, "$(P)$(Q):STARTGATE:MRES")
  field(INPD, "$(P)$(Q):STARTGATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_START:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_START:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_START:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_STARTHI")
  field(FLNK, "$(P)$(Q):PC_GATE_START:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_START)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_GATE_WID)

record(ai, "$(P)$(Q):PC_GATE_WID:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_WIDLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_GATE_WID:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_WIDHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_GATE_WID:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_GATE_WID:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_GATE_WID:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(INPC, "$(P)$(Q):PC_GATE_WID:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_GATE_WID:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_WID PP")
  field(INPA, "$(P)$(Q):PC_GATE_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_WID.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_WID.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_GATE_WID") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_GATE_WID:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_GATE_WID")
  field(INPC, "$(P)$(Q):GATE:MRES")
  field(INPD, "$(P)$(Q):GATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_WID:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_WID:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_WIDLO")
  field(FLNK, "$(P)$(Q):PC_GATE_WID:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_WID:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_GATE_WID")
  field(INPC, "$(P)$(Q):GATE:MRES")
  field(INPD, "$(P)$(Q):GATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_WID:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_WID:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_WIDHI")
  field(FLNK, "$(P)$(Q):PC_GATE_WID:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_GATE_NGATE)

record(ai, "$(P)$(Q):PC_GATE_NGATE:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_NGATELO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_GATE_NGATE:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_NGATEHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_GATE_NGATE:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_GATE_NGATE:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_GATE_NGATE:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):PC_GATE_NGATE:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_GATE_NGATE:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_NGATE PP")
  field(INPA, "$(P)$(Q):PC_GATE_NGATE:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_NGATE.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_NGATE.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_GATE_NGATE") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_GATE_NGATE:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_GATE_NGATE")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_NGATE:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_NGATE:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_NGATE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_NGATELO")
  field(FLNK, "$(P)$(Q):PC_GATE_NGATE:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_NGATE:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_GATE_NGATE")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_NGATE:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_NGATE:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_NGATE:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_NGATEHI")
  field(FLNK, "$(P)$(Q):PC_GATE_NGATE:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_NGATE)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_GATE_STEP)

record(ai, "$(P)$(Q):PC_GATE_STEP:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_STEPLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_GATE_STEP:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_GATE_STEPHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_GATE_STEP:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_GATE_STEP:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_GATE_STEP:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(INPC, "$(P)$(Q):PC_GATE_STEP:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_GATE_STEP:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_GATE_STEP PP")
  field(INPA, "$(P)$(Q):PC_GATE_STEP:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_STEP.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):GATE:MRES CP")
  field(INPB, "$(P)$(Q):GATE:OFF CP")
  field(OUT, "$(P)$(Q):PC_GATE_STEP.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_GATE_STEP") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_GATE_STEP:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_GATE_STEP")
  field(INPC, "$(P)$(Q):GATE:MRES")
  field(INPD, "$(P)$(Q):GATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_STEP:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_STEP:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_STEP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_STEPLO")
  field(FLNK, "$(P)$(Q):PC_GATE_STEP:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_GATE_STEP:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_GATE_STEP")
  field(INPC, "$(P)$(Q):GATE:MRES")
  field(INPD, "$(P)$(Q):GATE:OFF")
  field(OUT, "$(P)$(Q):PC_GATE_STEP:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_GATE_STEP:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_GATE_STEP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_GATE_STEPHI")
  field(FLNK, "$(P)$(Q):PC_GATE_STEP:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_GATE_STEP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_PULSE_INP)

record(ai, "$(P)$(Q):PC_PULSE_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_PULSE_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PC_PULSE_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_PULSE_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_PULSE_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_INP PP")
  field(INPA, "$(P)$(Q):PC_PULSE_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_PULSE_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_PULSE_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_INP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePosCompInp.vdb", PC_PULSE_SEL)

record(ai, "$(P)$(Q):PC_PULSE_SEL:RRBV") {
  field(DESC, "Raw Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_PULSE_SEL:RBV")
  field(INP, "@asyn($(PORT),0) PC_PULSE_SEL")
  field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(Q):PC_PULSE_SEL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "Raw Soft Channel")
  field(INP, "$(P)$(Q):PC_PULSE_SEL:RRBV")
  field(FLNK, "$(P)$(Q):PC_PULSE_SEL:SYNC")
  field(ZRST, "Position")
  field(ZRVL, "0")
  field(ONST, "Time")
  field(ONVL, "1")
  field(TWST, "External")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
}

record(calcout, "$(P)$(Q):PC_PULSE_SEL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_SEL PP")
  field(INPA, "$(P)$(Q):PC_PULSE_SEL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_PULSE_SEL") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_PULSE_SEL:SET PP")
  field(ZRST, "Position")
  field(ZRVL, "0")
  field(ONST, "Time")
  field(ONVL, "1")
  field(TWST, "External")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_SEL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_SEL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_SEL")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_SEL)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_PULSE_START)

record(ai, "$(P)$(Q):PC_PULSE_START:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_STARTLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_PULSE_START:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_STARTHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_PULSE_START:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_PULSE_START:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_PULSE_START:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(INPC, "$(P)$(Q):PC_PULSE_START:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_PULSE_START:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_START PP")
  field(INPA, "$(P)$(Q):PC_PULSE_START:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_START.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_START.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_START") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_PULSE_START:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_PULSE_START")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_START:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_START:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_START:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_STARTLO")
  field(FLNK, "$(P)$(Q):PC_PULSE_START:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_START:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_PULSE_START")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_START:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_START:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_START:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_STARTHI")
  field(FLNK, "$(P)$(Q):PC_PULSE_START:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_START)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_PULSE_DLY)

record(ai, "$(P)$(Q):PC_PULSE_DLY:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_DLYLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_PULSE_DLY:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_DLYHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_PULSE_DLY:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_PULSE_DLY:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_PULSE_DLY:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):TIME:MRES CP")
  field(INPB, "$(P)$(Q):TIME:OFF CP")
  field(INPC, "$(P)$(Q):PC_PULSE_DLY:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_PULSE_DLY:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_DLY PP")
  field(INPA, "$(P)$(Q):PC_PULSE_DLY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):TIME:MRES CP")
  field(INPB, "$(P)$(Q):TIME:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_DLY.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):TIME:MRES CP")
  field(INPB, "$(P)$(Q):TIME:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_DLY.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_DLY") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_PULSE_DLY:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_PULSE_DLY")
  field(INPC, "$(P)$(Q):TIME:MRES")
  field(INPD, "$(P)$(Q):TIME:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_DLY:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_DLY:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_DLYLO")
  field(FLNK, "$(P)$(Q):PC_PULSE_DLY:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_DLY:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_PULSE_DLY")
  field(INPC, "$(P)$(Q):TIME:MRES")
  field(INPD, "$(P)$(Q):TIME:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_DLY:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_DLY:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_DLY:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_DLYHI")
  field(FLNK, "$(P)$(Q):PC_PULSE_DLY:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_DLY)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_PULSE_WID)

record(ai, "$(P)$(Q):PC_PULSE_WID:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_WIDLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_PULSE_WID:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_WIDHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_PULSE_WID:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_PULSE_WID:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_PULSE_WID:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(INPC, "$(P)$(Q):PC_PULSE_WID:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_PULSE_WID:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_WID PP")
  field(INPA, "$(P)$(Q):PC_PULSE_WID:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_WID.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_WID.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_WID") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_PULSE_WID:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_PULSE_WID")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_WID:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_WID:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_WIDLO")
  field(FLNK, "$(P)$(Q):PC_PULSE_WID:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_WID:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_PULSE_WID")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_WID:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_WID:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_WID:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_WIDHI")
  field(FLNK, "$(P)$(Q):PC_PULSE_WID:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_WID)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_PULSE_STEP)

record(ai, "$(P)$(Q):PC_PULSE_STEP:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_STEPLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_PULSE_STEP:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_STEPHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_PULSE_STEP:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_PULSE_STEP:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_PULSE_STEP:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(INPC, "$(P)$(Q):PC_PULSE_STEP:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_PULSE_STEP:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP PP")
  field(INPA, "$(P)$(Q):PC_PULSE_STEP:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):PULSE:MRES CP")
  field(INPB, "$(P)$(Q):PULSE:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_STEP") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_PULSE_STEP:CALCLO PP")
  field(PREC, "$(PREC=4)")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_PULSE_STEP")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_STEP:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_STEP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_STEPLO")
  field(FLNK, "$(P)$(Q):PC_PULSE_STEP:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_PULSE_STEP")
  field(INPC, "$(P)$(Q):PULSE:MRES")
  field(INPD, "$(P)$(Q):PULSE:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_STEP:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_STEP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_STEPHI")
  field(FLNK, "$(P)$(Q):PC_PULSE_STEP:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_STEP)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PC_ARM_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT1 CP")
  field(CALC, "A>>29&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PC_GATE_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT1 CP")
  field(CALC, "A>>30&1")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):PC_PULSE_OUT") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT1 CP")
  field(CALC, "A>>31&1")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):M1:RBV") {
  field(INP, "$(M1=$(P)$(Q):NOMOTOR).RBV CP")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):M2:RBV") {
  field(INP, "$(M2=$(P)$(Q):NOMOTOR).RBV CP")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):M3:RBV") {
  field(INP, "$(M3=$(P)$(Q):NOMOTOR).RBV CP")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):M4:RBV") {
  field(INP, "$(M4=$(P)$(Q):NOMOTOR).RBV CP")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):NOMOTOR:RBV") {
  field(VAL, "0")
  field(PREC, "4")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):M1:SETPOS") {
  field(CALC, "A")
  field(INPA, "$(P)$(Q):M1:RBV")
  field(OUT, "$(P)$(Q):POS1_SET PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):M2:SETPOS") {
  field(CALC, "A")
  field(INPA, "$(P)$(Q):M2:RBV")
  field(OUT, "$(P)$(Q):POS2_SET PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):M3:SETPOS") {
  field(CALC, "A")
  field(INPA, "$(P)$(Q):M3:RBV")
  field(OUT, "$(P)$(Q):POS3_SET PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):M4:SETPOS") {
  field(CALC, "A")
  field(INPA, "$(P)$(Q):M4:RBV")
  field(OUT, "$(P)$(Q):POS4_SET PP")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_ARM_INP)

record(ai, "$(P)$(Q):PC_ARM_INP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_ARM_INP:SYNC")
  field(INP, "@asyn($(PORT),0) PC_ARM_INP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_ARM_INP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_ARM_INP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_ARM_INP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_ARM_INP PP")
  field(INPA, "$(P)$(Q):PC_ARM_INP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_ARM_INP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_ARM_INP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_ARM_INP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_ARM_INP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_ARM_INP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_ARM_INP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_ARM_INP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_ARM_INP)

record(stringin, "$(P)$(Q):M1:EGU") {
  field(INP, "$(M1=$(P)$(Q):NOMOTOR).EGU CP")
  info(autosaveFields_pass0, "VAL")
}

record(stringin, "$(P)$(Q):M2:EGU") {
  field(INP, "$(M2=$(P)$(Q):NOMOTOR).EGU CP")
  info(autosaveFields_pass0, "VAL")
}

record(stringin, "$(P)$(Q):M3:EGU") {
  field(INP, "$(M3=$(P)$(Q):NOMOTOR).EGU CP")
  info(autosaveFields_pass0, "VAL")
}

record(stringin, "$(P)$(Q):M4:EGU") {
  field(INP, "$(M4=$(P)$(Q):NOMOTOR).EGU CP")
  info(autosaveFields_pass0, "VAL")
}

record(stringin, "$(P)$(Q):NOMOTOR:EGU") {
  field(VAL, "cts")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", POLARITY)

record(ai, "$(P)$(Q):POLARITY:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB0")
  field(INP, "@asyn($(PORT),0) POLARITY")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):POLARITY:B0 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):POLARITY:B1 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):POLARITY:B2 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):POLARITY:B3 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):POLARITY:B4 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):POLARITY:B5 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):POLARITY:B6 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):POLARITY:B7 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):POLARITY:B8 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):POLARITY:B9 PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):POLARITY:BA PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):POLARITY:BB PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):POLARITY:BC PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):POLARITY:BD PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):POLARITY:BE PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  field(FLNK, "$(P)$(Q):POLARITY:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):POLARITY:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):POLARITY:BF PP")
  field(INPA, "$(P)$(Q):POLARITY:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):POLARITY:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):POLARITY.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):POLARITY") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):POLARITY:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):POLARITY:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):POLARITY:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) POLARITY")
  info(autosaveFields_pass0, "VAL")
}

# end(POLARITY)

record(ai, "$(P)$(Q):SYS_STATERR:RBVA") {
  field(DESC, "Zebra error status ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):SYS_STATERR")
  field(INP, "@asyn($(PORT),0) SYS_STATERR")
  field(SCAN, "I/O Intr")
}

# % archiver 10 Monitor
record(mbbiDirect, "$(P)$(Q):SYS_STATERR") {
  field(DESC, "Zebra error status")
  field(INP, "$(P)$(Q):SYS_STATERR:RBVA")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePosCompInp.vdb", PC_ARM_SEL)

record(ai, "$(P)$(Q):PC_ARM_SEL:RRBV") {
  field(DESC, "Raw Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_ARM_SEL:RBV")
  field(INP, "@asyn($(PORT),0) PC_ARM_SEL")
  field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(Q):PC_ARM_SEL:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "Raw Soft Channel")
  field(INP, "$(P)$(Q):PC_ARM_SEL:RRBV")
  field(FLNK, "$(P)$(Q):PC_ARM_SEL:SYNC")
  field(ZRST, "Soft")
  field(ZRVL, "0")
  field(ONST, "External")
  field(ONVL, "1")
  field(TWST, "$(EMPTY=)")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
}

record(calcout, "$(P)$(Q):PC_ARM_SEL:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_ARM_SEL PP")
  field(INPA, "$(P)$(Q):PC_ARM_SEL:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_ARM_SEL") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_ARM_SEL:SET PP")
  field(ZRST, "Soft")
  field(ZRVL, "0")
  field(ONST, "External")
  field(ONVL, "1")
  field(TWST, "$(EMPTY=)")
  field(TWVL, "2")
  field(THST, "$(EMPTY=)")
  field(THVL, "3")
  field(FRST, "$(EMPTY=)")
  field(FRVL, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_ARM_SEL:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_ARM_SEL:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_ARM_SEL")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_ARM_SEL)

record(ai, "$(P)$(Q):PULSE:OFF") {
  field(VAL, "0")
}

record(sel, "$(P)$(Q):STARTGATE:MRES") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):MOTOR:MRES CP")
  field(INPB, "$(P)$(Q):TIME:MRES CP")
  field(INPC, "1")
  field(NVL, "$(P)$(Q):PC_GATE_SEL:RBV CP")
  field(INPD, "$(P)$(Q):MOTOR:MRES CP")
  info(autosaveFields_pass0, "VAL")
}

record(sel, "$(P)$(Q):STARTGATE:OFF") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):MOTOR:OFF CP")
  field(INPB, "0")
  field(INPC, "0")
  field(NVL, "$(P)$(Q):PC_GATE_SEL:RBV CP")
  field(INPD, "$(P)$(Q):MOTOR:OFF CP")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):GATE:OFF") {
  field(VAL, "0")
}

record(calc, "$(P)$(Q):MOTOR:ABSMRES") {
  field(CALC, "ABS(A)")
  field(INPA, "$(P)$(Q):MOTOR:MRES CP")
  info(autosaveFields_pass0, "VAL")
}

record(sel, "$(P)$(Q):GATE:MRES") {
  field(SELM, "Specified")
  field(INPA, "$(P)$(Q):MOTOR:ABSMRES CP")
  field(INPB, "$(P)$(Q):TIME:MRES CP")
  field(INPC, "1")
  field(NVL, "$(P)$(Q):PC_GATE_SEL:RBV CP")
  field(INPD, "$(P)$(Q):MOTOR:ABSMRES CP")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWritePosCompInp.vdb", PC_ENC)

record(ai, "$(P)$(Q):PC_ENC:RRBV") {
  field(DESC, "Raw Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_ENC:RBV")
  field(INP, "@asyn($(PORT),0) PC_ENC")
  field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(Q):PC_ENC:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "Raw Soft Channel")
  field(INP, "$(P)$(Q):PC_ENC:RRBV")
  field(FLNK, "$(P)$(Q):PC_ENC:SYNC")
  field(ZRST, "Enc1")
  field(ZRVL, "0")
  field(ONST, "Enc2")
  field(ONVL, "1")
  field(TWST, "Enc3")
  field(TWVL, "2")
  field(THST, "Enc4")
  field(THVL, "3")
  field(FRST, "Enc1-4Av")
  field(FRVL, "4")
}

record(calcout, "$(P)$(Q):PC_ENC:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_ENC PP")
  field(INPA, "$(P)$(Q):PC_ENC:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_ENC") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_ENC:SET PP")
  field(ZRST, "Enc1")
  field(ZRVL, "0")
  field(ONST, "Enc2")
  field(ONVL, "1")
  field(TWST, "Enc3")
  field(TWVL, "2")
  field(THST, "Enc4")
  field(THVL, "3")
  field(FRST, "Enc1-4Av")
  field(FRVL, "4")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_ENC:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_ENC:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_ENC")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_ENC)

record(waveform, "$(P)$(Q):PC_TIME") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_TIME")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):PC_SYS1") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP5")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):PC_SYS2") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP6")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):PC_DIV1") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP7")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):PC_DIV1_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP7_LAST")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(waveform, "$(P)$(Q):PC_DIV2") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP8")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):PC_DIV2_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP8_LAST")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(waveform, "$(P)$(Q):PC_DIV3") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP9")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):PC_DIV3_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP9_LAST")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(waveform, "$(P)$(Q):PC_DIV4") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP10")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):PC_DIV4_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP10_LAST")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(waveform, "$(P)$(Q):PC_FILT1") {
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_FILT1")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "CHAR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_FILTSEL1)

record(ai, "$(P)$(Q):PC_FILTSEL1:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_FILTSEL1:SYNC")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL1")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_FILTSEL1:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL1_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL1:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_FILTSEL1 PP")
  field(INPA, "$(P)$(Q):PC_FILTSEL1:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_FILTSEL1") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_FILTSEL1:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_FILTSEL1:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_FILTSEL1:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_FILTSEL1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL1:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_FILTSEL1:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_FILTSEL1)

record(waveform, "$(P)$(Q):PC_FILT2") {
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_FILT2")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "CHAR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_FILTSEL2)

record(ai, "$(P)$(Q):PC_FILTSEL2:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_FILTSEL2:SYNC")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL2")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_FILTSEL2:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL2_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL2:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_FILTSEL2 PP")
  field(INPA, "$(P)$(Q):PC_FILTSEL2:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_FILTSEL2") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_FILTSEL2:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_FILTSEL2:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_FILTSEL2:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_FILTSEL2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL2:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_FILTSEL2:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_FILTSEL2)

record(waveform, "$(P)$(Q):PC_FILT3") {
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_FILT3")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "CHAR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_FILTSEL3)

record(ai, "$(P)$(Q):PC_FILTSEL3:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_FILTSEL3:SYNC")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL3")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_FILTSEL3:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL3_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL3:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_FILTSEL3 PP")
  field(INPA, "$(P)$(Q):PC_FILTSEL3:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_FILTSEL3") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_FILTSEL3:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_FILTSEL3:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_FILTSEL3:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_FILTSEL3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL3:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_FILTSEL3:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_FILTSEL3)

record(waveform, "$(P)$(Q):PC_FILT4") {
  field(DTYP, "asynInt8ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_FILT4")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "CHAR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", PC_FILTSEL4)

record(ai, "$(P)$(Q):PC_FILTSEL4:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_FILTSEL4:SYNC")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL4")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):PC_FILTSEL4:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) PC_FILTSEL4_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL4:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_FILTSEL4 PP")
  field(INPA, "$(P)$(Q):PC_FILTSEL4:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_FILTSEL4") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_FILTSEL4:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_FILTSEL4:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_FILTSEL4:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_FILTSEL4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_FILTSEL4:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):PC_FILTSEL4:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_FILTSEL4)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):QUAD_OUTA") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>24&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", QUAD_STEP)

record(ai, "$(P)$(Q):QUAD_STEP:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):QUAD_STEP:SYNC")
  field(INP, "@asyn($(PORT),0) QUAD_STEP")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):QUAD_STEP:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) QUAD_STEP_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):QUAD_STEP:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):QUAD_STEP PP")
  field(INPA, "$(P)$(Q):QUAD_STEP:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):QUAD_STEP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):QUAD_STEP:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):QUAD_STEP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):QUAD_STEP:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) QUAD_STEP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):QUAD_STEP:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):QUAD_STEP:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(QUAD_STEP)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", QUAD_DIR)

record(ai, "$(P)$(Q):QUAD_DIR:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):QUAD_DIR:SYNC")
  field(INP, "@asyn($(PORT),0) QUAD_DIR")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):QUAD_DIR:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) QUAD_DIR_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):QUAD_DIR:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):QUAD_DIR PP")
  field(INPA, "$(P)$(Q):QUAD_DIR:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):QUAD_DIR") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):QUAD_DIR:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):QUAD_DIR:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):QUAD_DIR:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) QUAD_DIR")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):QUAD_DIR:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):QUAD_DIR:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(QUAD_DIR)

# % archiver 10 Monitor
record(calcout, "$(P)$(Q):QUAD_OUTB") {
  field(DESC, "Current output status")
  field(INPA, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A>>25&1")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT5_CONN)

record(ai, "$(P)$(Q):OUT5_CONN:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT5_CONN:SYNC")
  field(INP, "@asyn($(PORT),0) OUT5_CONN")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT5_CONN:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT5_CONN_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_CONN:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT5_CONN PP")
  field(INPA, "$(P)$(Q):OUT5_CONN:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT5_CONN") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT5_CONN:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT5_CONN:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT5_CONN:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT5_CONN")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT5_CONN:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT5_CONN:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT5_CONN)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT6_CONN)

record(ai, "$(P)$(Q):OUT6_CONN:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT6_CONN:SYNC")
  field(INP, "@asyn($(PORT),0) OUT6_CONN")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT6_CONN:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT6_CONN_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_CONN:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT6_CONN PP")
  field(INPA, "$(P)$(Q):OUT6_CONN:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT6_CONN") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT6_CONN:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT6_CONN:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT6_CONN:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT6_CONN")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT6_CONN:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT6_CONN:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT6_CONN)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT7_CONN)

record(ai, "$(P)$(Q):OUT7_CONN:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT7_CONN:SYNC")
  field(INP, "@asyn($(PORT),0) OUT7_CONN")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT7_CONN:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT7_CONN_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_CONN:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT7_CONN PP")
  field(INPA, "$(P)$(Q):OUT7_CONN:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT7_CONN") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT7_CONN:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT7_CONN:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT7_CONN:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT7_CONN")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT7_CONN:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT7_CONN:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT7_CONN)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteMux.vdb", OUT8_CONN)

record(ai, "$(P)$(Q):OUT8_CONN:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):OUT8_CONN:SYNC")
  field(INP, "@asyn($(PORT),0) OUT8_CONN")
  field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(Q):OUT8_CONN:STR") {
  field(DESC, "Readback param string value")
  field(DTYP, "asynOctetRead")
  field(INP, "@asyn($(PORT),0) OUT8_CONN_STR")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_CONN:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):OUT8_CONN PP")
  field(INPA, "$(P)$(Q):OUT8_CONN:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):OUT8_CONN") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):OUT8_CONN:SET PP")
  field(DRVL, "0")
  field(DRVH, "63")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):OUT8_CONN:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):OUT8_CONN:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) OUT8_CONN")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):OUT8_CONN:STA") {
  field(DESC, "Current system bus status for output")
  field(INPA, "$(P)$(Q):OUT8_CONN:RBV CP")
  field(INPB, "$(P)$(Q):SYS_STAT1 CP")
  field(INPC, "$(P)$(Q):SYS_STAT2 CP")
  field(CALC, "A<32?B>>A&1:C>>(A-32)&1")
  info(autosaveFields_pass0, "VAL")
}

# end(OUT8_CONN)

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWriteBitfield.vdb", PC_BIT_CAP)

record(ai, "$(P)$(Q):PC_BIT_CAP:RBV") {
  field(DESC, "Readback param value ai")
  field(DTYP, "asynInt32")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB0")
  field(INP, "@asyn($(PORT),0) PC_BIT_CAP")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB0") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>0)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B0 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB1") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>1)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B1 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB2")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB2") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>2)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B2 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB3")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB3") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>3)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B3 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB4") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>4)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B4 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB5")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB5") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>5)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B5 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB6")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB6") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>6)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B6 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB7")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB7") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>7)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B7 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB8")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB8") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>8)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B8 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCB9")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCB9") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>9)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:B9 PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBA")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBA") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>10)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BA PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBB")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBB") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>11)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BB PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBC")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>12)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BC PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBD")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBD") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>13)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BD PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBE")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBE") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>14)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BE PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  field(FLNK, "$(P)$(Q):PC_BIT_CAP:SYNCBF")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_BIT_CAP:SYNCBF") {
  field(DESC, "Sync demand with readback")
  field(CALC, "(A>>15)&1")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:BF PP")
  field(INPA, "$(P)$(Q):PC_BIT_CAP:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B0") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B0 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B1") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B1 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B2") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B2 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B3") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B3 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B4") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B4 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B5") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B5 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B6") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B6 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B7") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B7 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B8") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B8 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:B9") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.B9 PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BA") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BA PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BB") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BB PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BC") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BC PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BD") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BD PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BE") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BE PP")
  info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)$(Q):PC_BIT_CAP:BF") {
  field(ZNAM, "No")
  field(ONAM, "Yes")
  field(OUT, "$(P)$(Q):PC_BIT_CAP.BF PP")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbboDirect, "$(P)$(Q):PC_BIT_CAP") {
  field(DESC, "Demand value for param")
  field(OUT, "$(P)$(Q):PC_BIT_CAP:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_BIT_CAP:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_BIT_CAP:SYNCB0.PACT")
  field(OUT, "@asyn($(PORT),0) PC_BIT_CAP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_BIT_CAP)

record(ao, "$(P)$(Q):ARRAY_UPDATE") {
  field(DESC, "Update array values if new ones exist")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0) ARRAY_UPDATE")
  field(SCAN, "1 second")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):PC_ENC1_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP1_LAST")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):PC_ENC2_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP2_LAST")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):PC_ENC3_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP3_LAST")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(ai, "$(P)$(Q):PC_ENC4_LAST") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0) PC_CAP4_LAST")
  field(SCAN, "I/O Intr")
  field(PREC, "4")
}

record(waveform, "$(P)$(Q):PC_ENC1") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP1")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):PC_ENC2") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP2")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

record(waveform, "$(P)$(Q):PC_ENC3") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP3")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  info(autosaveFields_pass0, "VAL")
}

# This one updates last, so forward link to PC_NUM_DOWN
record(waveform, "$(P)$(Q):PC_ENC4") {
  field(DTYP, "asynFloat64ArrayIn")
  field(INP, "@asyn($(PORT),0)PC_CAP4")
  field(NELM, "$(NELM=100000)")
  field(FTVL, "DOUBLE")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(Q):PC_NUM_DOWN")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
# Note Passive scan, will be triggered from PC_ENC4
record(ai, "$(P)$(Q):PC_NUM_DOWN") {
  field(DESC, "Points downloaded")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_NUM_DOWN")
  field(FLNK, "$(P)$(Q):ARRAY_ACQ")
}

# % archiver 10 Monitor
# % gui, $(PORT), status
# Note Passive scan, will be triggered from NUM_DOWN
record(ai, "$(P)$(Q):ARRAY_ACQ") {
  field(DESC, "Zebra acquiring arrays")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) ARRAY_ACQ")
  field(FLNK, "$(P)$(Q):ARM_BUSY_DONE")
}

record(ao, "$(P)$(Q):ARM_BUSY_DONE") {
  field(VAL, "0")
  field(OUT, "$(P)$(Q):ARM_BUSY CA")
  info(autosaveFields_pass0, "VAL")
}

# expand("/dls_sw/work/R3.14.12.3/support/zebra/zebraApp/Db/O.linux-x86_64/../zebraRegisterWrite32.vdb", PC_PULSE_MAX)

record(ai, "$(P)$(Q):PC_PULSE_MAX:RBVLO") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_MAXLO")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(ai, "$(P)$(Q):PC_PULSE_MAX:RBVHI") {
  field(DESC, "Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_PULSE_MAXHI")
  field(SCAN, "I/O Intr")
  field(MDEL, "-1")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:RBV_CTS") {
  field(DESC, "Convert 2 uint16 into int32")
  field(INPA, "$(P)$(Q):PC_PULSE_MAX:RBVLO CP")
  field(INPB, "$(P)$(Q):PC_PULSE_MAX:RBVHI CP")
  field(CALC, "-(B>>15)*2**32+A+(B<<16)")
  field(FLNK, "$(P)$(Q):PC_PULSE_MAX:RBV")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:RBV") {
  field(DESC, "Convert cts into EGUs")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(INPC, "$(P)$(Q):PC_PULSE_MAX:RBV_CTS")
  field(CALC, "A*C+B")
  field(FLNK, "$(P)$(Q):PC_PULSE_MAX:SYNC")
  field(PREC, "4")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_PULSE_MAX PP")
  field(INPA, "$(P)$(Q):PC_PULSE_MAX:RBV")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:DRVH") {
  field(CALC, "A*2**31+B")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_MAX.DRVH")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:DRVL") {
  field(CALC, "0")
  field(INPA, "$(P)$(Q):NOMOTOR:MRES CP")
  field(INPB, "$(P)$(Q):NOMOTOR:OFF CP")
  field(OUT, "$(P)$(Q):PC_PULSE_MAX.DRVL")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(ao, "$(P)$(Q):PC_PULSE_MAX") {
  field(DESC, "Demand value for param")
  field(FLNK, "$(P)$(Q):PC_PULSE_MAX:CALCLO PP")
  field(PREC, "0")
  field(DRVL, "0")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:CALCLO") {
  field(CALC, "FLOOR((A-D)/C+0.5)&65535")
  field(INPA, "$(P)$(Q):PC_PULSE_MAX")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_MAX:SETLO PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_MAX:SETLO") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_MAX:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_MAXLO")
  field(FLNK, "$(P)$(Q):PC_PULSE_MAX:CALCHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE_MAX:CALCHI") {
  field(CALC, "FLOOR((A-D)/C+0.5)>>16")
  field(INPA, "$(P)$(Q):PC_PULSE_MAX")
  field(INPC, "$(P)$(Q):NOMOTOR:MRES")
  field(INPD, "$(P)$(Q):NOMOTOR:OFF")
  field(OUT, "$(P)$(Q):PC_PULSE_MAX:SETHI PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_PULSE_MAX:SETHI") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_PULSE_MAX:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_PULSE_MAXHI")
  field(FLNK, "$(P)$(Q):PC_PULSE_MAX:RBVLO PP")
  info(autosaveFields_pass0, "VAL")
}

# end(PC_PULSE_MAX)

record(ai, "$(P)$(Q):PC_DIR:RRBV") {
  field(DESC, "Raw Readback param value")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0) PC_DIR")
  field(FLNK, "$(P)$(Q):PC_DIR:CRBV")
  field(SCAN, "I/O Intr")
}

record(calcout, "$(P)$(Q):PC_DIR:CRBV") {
  field(DESC, "Swap +ve and negative directions")
  field(CALC, "B<0?(A=0?1:A=1?0:A):A")
  field(INPA, "$(P)$(Q):PC_DIR:RRBV")
  field(INPB, "$(P)$(Q):MOTOR:MRES CP")
  field(OUT, "$(P)$(Q):PC_DIR:RBV.RVAL PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)$(Q):PC_DIR:RBV") {
  field(DESC, "Readback param value")
  field(DTYP, "Raw Soft Channel")
  field(FLNK, "$(P)$(Q):PC_DIR:SYNC")
  field(ZRST, "Positive")
  field(ZRVL, "0")
  field(ONST, "Negative")
  field(ONVL, "1")
}

record(calcout, "$(P)$(Q):PC_DIR:SYNC") {
  field(DESC, "Sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P)$(Q):PC_DIR PP")
  field(INPA, "$(P)$(Q):PC_DIR:RBV")
  info(autosaveFields_pass0, "VAL")
}

# % archiver 10 Monitor
record(mbbo, "$(P)$(Q):PC_DIR") {
  field(DESC, "Demand value for param")
  field(DTYP, "Raw Soft Channel")
  field(OUT, "$(P)$(Q):PC_DIR:CSET.A PP")
  field(ZRST, "Positive")
  field(ZRVL, "0")
  field(ONST, "Negative")
  field(ONVL, "1")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_DIR:CSET") {
  field(DESC, "Swap +ve and negative directions")
  field(CALC, "B<0?(A=0?1:A=1?0:A):A")
  field(INPB, "$(P)$(Q):MOTOR:MRES")
  field(OUT, "$(P)$(Q):PC_DIR:SET PP")
  info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)$(Q):PC_DIR:SET") {
  field(DESC, "Write param value to zebra")
  field(DTYP, "asynInt32")
  field(SDIS, "$(P)$(Q):PC_DIR:SYNC.PACT")
  field(OUT, "@asyn($(PORT),0) PC_DIR")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)$(Q):TIME:MRES") {
  field(VAL, "0.0001")
}

record(ai, "$(P)$(Q):TIME:OFF") {
  field(VAL, "0")
}

# Used for GDA
# % archiver 10 Monitor
record(busy, "$(P)$(Q):WRITE_BUSY") {
  info(autosaveFields_pass0, "VAL")
}

# Used for GDA
# % archiver 10 Monitor
record(ai, "$(P)$(Q):SCAN_TYPE") {
}

record(calcout, "$(P)$(Q):PC_PULSE_STEP:DRVL") {
  field(CALC, "A=1?B=0?C>2**6?F:G:H:I")
  field(INPA, "$(P)$(Q):PC_PULSE_SEL:RBV CP")
  field(INPB, "$(P)$(Q):PC_TSPRE:RBV CP")
  field(INPC, "$(P)$(Q):PC_BIT_CAP CP")
  field(INPF, "0.0016")
  field(INPG, "0.0012")
  field(INPH, "0.0003")
  field(INPI, "$(P)$(Q):PULSE:MRES CP")
  field(OUT, "$(P)$(Q):PC_PULSE_STEP.DRVL")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):PC_PULSE:VALID") {
  field(CALC, "A>MAX(B,C)+0.0001")
  field(INPA, "$(P)$(Q):PC_PULSE_STEP CP")
  field(INPB, "$(P)$(Q):PC_PULSE_WID CP")
  field(INPC, "$(P)$(Q):PC_PULSE_DLY CP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):MAV:OFF") {
  field(CALC, "(A+B+C+D)/4")
  field(INPA, "$(P)$(Q):M1:OFF CP")
  field(PREC, "4")
  field(INPB, "$(P)$(Q):M2:OFF CP")
  field(INPC, "$(P)$(Q):M3:OFF CP")
  field(INPD, "$(P)$(Q):M4:OFF CP")
  info(autosaveFields_pass0, "VAL")
}

record(calcout, "$(P)$(Q):MAV:MRES") {
  field(CALC, "(A+B+C+D)/16")
  field(INPA, "$(P)$(Q):M1:MRES CP")
  field(PREC, "4")
  field(INPB, "$(P)$(Q):M2:MRES CP")
  field(INPC, "$(P)$(Q):M3:MRES CP")
  field(INPD, "$(P)$(Q):M4:MRES CP")
  info(autosaveFields_pass0, "VAL")
}
